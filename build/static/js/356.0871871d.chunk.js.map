{"version":3,"file":"static/js/356.0871871d.chunk.js","mappings":"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","sources":["components/CommentCreationForm.tsx","components/Comment.tsx","components/CommentContainer.tsx","pages/PostPage.tsx"],"sourcesContent":["import React, { ComponentProps, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useCookies } from 'react-cookie';\r\n\r\nimport Button from './Button';\r\n\r\nfunction assertIsFormFieldElement(element: Element): asserts element is HTMLInputElement | HTMLSelectElement | HTMLButtonElement {\r\n    // Customize this list as necessary −−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    if (!(\"value\" in element)) {\r\n        throw new Error(`Element is not a form field element`);\r\n    }\r\n}\r\n\r\nfunction assertIsSelectElement(element: Element): asserts element is HTMLSelectElement {\r\n    // Customize this list as necessary −−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    if (!(\"value\" in element)) {\r\n        throw new Error(`Element is not a form field element`);\r\n    }\r\n}\r\n\r\ntype CommentCreationFormProps = { variant: string, id: string, post_id?:string } & ComponentProps<\"div\">\r\n\r\nfunction CommentCreationForm({ variant, id, post_id=\"0\" }: CommentCreationFormProps) {\r\n    const [cookies] = useCookies(['token']);\r\n    const [showFields, setShowFields] = useState(false);\r\n    \r\n    function createComment(e: React.FormEvent<HTMLFormElement>) {\r\n        e.preventDefault();\r\n        const comment = e.currentTarget[0];\r\n        assertIsFormFieldElement(comment);\r\n\r\n        const payload = {\r\n            token: cookies.token,\r\n            comment: comment.value,\r\n            variant: variant,\r\n            id: id,\r\n            post_id: post_id,\r\n        }\r\n\r\n        axios.post('/post_comment', payload)\r\n        .then(resp => {\r\n            if (resp.data.status === 0) {\r\n                alert(\"Comment posted!\")\r\n            } else if (resp.data.status === 1) {\r\n                alert(\"Please relog in before trying again.\")\r\n            } else {\r\n                alert(\"There was a problem creating the post, please try again\")\r\n            }\r\n        })\r\n        .catch(resp => console.log(resp))\r\n    }\r\n\r\n    return (<div className=\"w-11/12 mx-1 h-auto flex-col\">\r\n        <form className=\"h-auto w=auto\" onSubmit={createComment}>\r\n            <input type='text' className=\"border border-slate-400\" placeholder='Add a comment' onFocus={() => setShowFields(true)}/>\r\n            {showFields && <div>\r\n                <Button className=\"self-end\" style={{transform: `translateX(50vw)`}} onClick={() => setShowFields(false)}>Cancel</Button>\r\n                <Button className=\"self-end\" style={{transform: `translateX(50vw)`}}>Comment</Button>\r\n            </div>}\r\n        </form>\r\n    </div>)\r\n}\r\n\r\nexport default CommentCreationForm;","import { useState, lazy, Suspense } from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport axios from 'axios';\r\n\r\n//import Button from './Button';\r\nimport CommentCreationForm from './CommentCreationForm';\r\nimport CommentContainer from './CommentContainer'\r\n//import CommentEditor from './CommentEditor';\r\n\r\nconst Button = lazy(() => import('./Button'))\r\nconst CommentEditor = lazy(() => import('./CommentEditor'))\r\n\r\ntype CommentProp = {\r\n    id: string,\r\n    comment: string,\r\n    date: string,\r\n    parent_comment_id: string,\r\n    post_id: string,\r\n    user_id: string,\r\n    author: string,\r\n    hasChild: boolean,\r\n}\r\n\r\nfunction Comment({ id, comment, date, parent_comment_id, post_id, user_id, author }: CommentProp) {\r\n    const [cookies] = useCookies(['token', 'username']);\r\n    const [hasChild] = useState<{[key:string]: boolean}>({});\r\n    const loggedIn = (cookies.token != null);\r\n\r\n    function deleteComment() {\r\n        axios.post('/delete_comment', {\r\n            id: id,\r\n            token: cookies.token,\r\n        })\r\n        .then(resp => {\r\n            if (resp.data.status === 0) {\r\n                alert(\"Comment deleted!\")\r\n                window.location.href = '/'\r\n            } else {\r\n                alert(\"Error, please try relogging in before trying again.\")\r\n            }\r\n        })\r\n        .catch(resp => console.log(resp))\r\n    }\r\n\r\n    return (<div id=\"1\" className=\"w-128 h-auto border-l border-gray-500 flex justify-between\">\r\n        <div className=\"h-auto flex-col justify-between\">\r\n            <div className=\"h-10 flex overflow-y-hidden justify-between\">\r\n                <label>{comment}</label>\r\n            </div>\r\n            <div className=\"h-10 flex justify-between\">\r\n                <p>{date} -{author}</p>\r\n                {cookies.username === author && <Suspense>\r\n                        <CommentEditor id={id} comment={comment}/>\r\n                        <Button onClick={deleteComment}>Delete Comment</Button>\r\n                    </Suspense>}\r\n            </div>\r\n            {loggedIn && <CommentCreationForm variant=\"comment\" id={id}/>}\r\n            {hasChild && <CommentContainer variant=\"comment\" id={id}/>}\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default Comment;","import { ComponentProps, useEffect, useState } from \"react\";\r\nimport { useCookies } from 'react-cookie';\r\nimport axios from 'axios';\r\n\r\nimport Comment from './Comment';\r\nimport CommentCreationForm from './CommentCreationForm';\r\n\r\ntype CommentContainerProps = {\r\n    variant: string,\r\n    id: string\r\n} & ComponentProps<\"div\">\r\n\r\nconst CommentProp = {\r\n    id: \"0\",\r\n    title: \"Backend returned title\",\r\n    labels: [\"Game\", \"Entertainment\"],\r\n    description: \"Backend returned description\",\r\n    date: \"23 December 2023\",\r\n    author: \"Administrator\",\r\n    user_id: \"1\",\r\n    label_id: \"1\",\r\n    created_at: \"\",\r\n    updated_at: \"\"\r\n}\r\n\r\nfunction CommentContainer({ variant, id, ...props }: CommentContainerProps) {\r\n    const [cookies] = useCookies(['token']);\r\n    const [hasChild, setHasChild] = useState<{[key:string]: boolean}>({});\r\n    const loggedIn = (cookies.token != null);\r\n    type comment = {\r\n        id: string,\r\n        comment: string,\r\n        date: string,\r\n        parent_comment_id: string,\r\n        post_id: string,\r\n        user_id: string,\r\n        author: string,\r\n    }\r\n    const [comments, setComments] = useState<comment[]>([])\r\n\r\n    useEffect(() => {\r\n        axios.post('/get_comments', {variant: variant, id: id})\r\n        .then(resp => {\r\n            if (resp.data.status === 0) {\r\n                setComments(resp.data.comments)\r\n                setHasChild(resp.data.hasChild)\r\n            }\r\n        })\r\n        .catch(resp => console.log(resp))\r\n    }, [])\r\n\r\n    return <div {...props} className=\"w-128 h-auto m-5 space-y-1 flex-col\">\r\n        {loggedIn && variant == \"post\" && <CommentCreationForm variant={variant} id={id} />}\r\n        {Array.isArray(comments) && comments.map((comment: comment) => {\r\n            return <Comment id={comment.id} \r\n            key={comment.id} \r\n            comment={comment.comment} \r\n            date={comment.date} \r\n            parent_comment_id={comment.parent_comment_id}\r\n            post_id={comment.post_id}\r\n            user_id={comment.user_id}\r\n            author={comment.author} \r\n            hasChild={hasChild[comment.id]}/>\r\n        })}\r\n    </div>\r\n}\r\n\r\nexport default CommentContainer;","import { useState, useEffect, lazy, Suspense } from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport { useParams } from 'react-router-dom';\r\nimport { ArrowLeft } from 'lucide-react';\r\nimport axios from 'axios';\r\n\r\nimport NavBar from '../components/NavBar';\r\nimport Button from '../components/Button';\r\nimport CommentContainer from '../components/CommentContainer'\r\n//import PostEditor from '../components/PostEditor'\r\n\r\nconst PostEditor = lazy(() => import('../components/PostEditor'))\r\n\r\ntype postprop = {id: string, title: string, description: string, author: string, date:string, labels: string[]}\r\n\r\nfunction PostPage() {\r\n    const [cookies, setCookie, removeCookie] = useCookies(['token', 'username']);\r\n    const params = useParams();    \r\n    const [post, setPost] = useState<postprop>({id: \"0\", title: \"Fetching post\", description: \"\", author: \"\", date: \"\", labels: []})\r\n\r\n    useEffect(() => {\r\n        if (params['id'] != null) {\r\n            fetchPost(params['id']);\r\n        } else window.location.href = '/';\r\n    }, [params['id']])\r\n\r\n    /**\r\n     * Make fetch request to back end to get information of the post\r\n     * \r\n     * Post to backend with:\r\n     * id: int\r\n     * \r\n     * Backend will respond with the following:\r\n     * status:\r\n     * 0 - success\r\n     * 1 - id no longer exists\r\n     * 2 - unable to interact with database\r\n     */\r\n    function fetchPost(id: string) {\r\n        axios.post('/get_post', {id: id})\r\n        .then(resp => {\r\n            if (resp.data.status === 0) {\r\n                setPost({...resp.data.post, labels: resp.data.labels})\r\n            } else {\r\n                alert(\"Error fetching post, going back to main page\")\r\n                window.location.href = '/'\r\n            }\r\n        })\r\n        .catch(resp => console.log(resp))\r\n    }\r\n\r\n    function deletePost() {\r\n        axios.post('/delete_post', {\r\n            id: params['id'],\r\n            token: cookies.token,\r\n        })\r\n        .then(resp => {\r\n            if (resp.data.status === 0) {\r\n                alert(\"Post deleted!\")\r\n                window.location.href = '/'\r\n            } else {\r\n                alert(\"Error, please try relogging in before trying again.\")\r\n            }\r\n        })\r\n        .catch(resp => console.log(resp))\r\n    }\r\n\r\n    return (<div className=\"top-0 left-0 h-screen w-128 mx-20 overflow-y-hidden\">\r\n        <NavBar />\r\n        <div className=\"mx-10 my-10 h-3/4 flex-col bg-gray-100 bg-opacity-100 overflow-x-hidden\">\r\n            <div className=\"flex\">\r\n                <Button onClick={() => {\r\n                    window.location.href = '/'\r\n                }}>\r\n                    <ArrowLeft />\r\n                </Button>\r\n                <h1 className=\"ml-10 font-bold\">{post.title}</h1>            \r\n            </div>\r\n            <div className=\"flex-col\">\r\n                <label>{post.description}</label>\r\n                <br/>\r\n                <br/>\r\n                <label>- {post.author}</label>\r\n                {cookies.username === post.author && <Suspense fallback={<h1>Loading Form...</h1>}>\r\n                        <PostEditor post={post}/>\r\n                    </Suspense>}\r\n                <br/>\r\n                {cookies.username === post.author && <Button onClick={deletePost}>Delete Post</Button>}\r\n                <br/>\r\n                <br/>\r\n            </div>\r\n            <div>\r\n                <h3 className=\"font-bold\">Comments</h3>\r\n                {params[\"id\"] != null && <CommentContainer variant=\"post\" id={params['id']}/>}            \r\n            </div>\r\n        </div>            \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default PostPage;"],"names":["_ref","variant","id","post_id","cookies","useCookies","showFields","setShowFields","useState","_jsx","className","children","_jsxs","onSubmit","e","preventDefault","comment","currentTarget","element","Error","assertIsFormFieldElement","payload","token","value","axios","post","then","resp","data","status","alert","catch","console","log","type","placeholder","onFocus","Button","style","transform","onClick","lazy","CommentEditor","date","parent_comment_id","user_id","author","hasChild","loggedIn","username","Suspense","window","location","href","CommentCreationForm","CommentContainer","props","setHasChild","comments","setComments","useEffect","Array","isArray","map","Comment","PostEditor","setCookie","removeCookie","params","useParams","setPost","title","description","labels","NavBar","ArrowLeft","fallback"],"sourceRoot":""}